diff --git a/lib/Auth/LDAP.php b/lib/Auth/LDAP.php
index 93716ee..9ec097b 100644
--- a/lib/Auth/LDAP.php
+++ b/lib/Auth/LDAP.php
@@ -24,6 +24,7 @@
 */
 
 require_once "Net/LDAP3.php";
+require_once "/usr/share/roundcubemail/plugins/managesieve/lib/Roundcube/rcube_sieve_script.php";
 
 /**
  * Kolab LDAP handling abstraction class.
@@ -651,6 +652,16 @@ class LDAP extends Net_LDAP3 {
             $result = $this->legacy_rights($subject);
         }
 
+        if ($_SESSION['user']->user_bind_dn == "cn=Directory Manager") {
+           $result['entryLevelRights'][] = "report";
+        } else {
+            $user = $this->user_info($_SESSION['user']->user_bind_dn, array('objectclass', 'nsrole'));
+            if ((!empty($user[$_SESSION['user']->user_bind_dn]['nsrole']) && strpos($user[$_SESSION['user']->user_bind_dn]['nsrole'], '=kolab-admin,dc=') > 0) ||
+                (in_array('tbitskolabdomainadmin', array_values($user[$_SESSION['user']->user_bind_dn]['objectclass'])))) {
+                $result['entryLevelRights'][] = "report";
+            }
+        }
+
         if (!$this->set_cache_data($ckey, $result)) {
              $this->icache[$ckey] = $result;
         }
@@ -1144,6 +1155,72 @@ class LDAP extends Net_LDAP3 {
         return $this->entry_delete($user);
     }
 
+    private function collect_sieve_rules($result) {
+        $sieve = new Net_Sieve();
+        $sieve_port = 4190;
+        $options = array('ssl' => array('verify_peer_name' => '', 'verify_peer' => '', 'allow_self_signed' => 1));
+     
+        $res = $sieve->connect('localhost', $sieve_port, $options, true);
+        $active_sieve_rules = '';
+        if (is_a($res, 'PEAR_Error')) {
+            $this->_log(LOG_ERROR, "cannot connect to sieve");
+            return $result;
+        }
+
+        $mail = $result[$user_dn]['mail'];
+        if (is_array($mail)) {
+            $mail = $mail[0];
+        }
+        $res = $sieve->login($this->conf->get('cyrus-imap', 'admin_login'), $this->conf->get('cyrus-imap', 'admin_password'), 'PLAIN', $mail);
+        if (is_a($res, 'PEAR_Error')) {
+            $this->_log(LOG_ERROR, "cannot login to sieve");
+            return $result;
+        }
+
+        $exts = $sieve->getExtensions();
+        $active = true;
+        $scripts = $sieve->listScripts($active);
+        foreach ($scripts as $scriptname) {
+            $script = $sieve->getScript($scriptname);
+            $script = new rcube_sieve_script($script, $exts);
+            foreach ($script->content as $content) {
+                if ($content['disabled'] == 1) {
+                    continue;
+                }
+//$this->_log(LOG_ERROR, print_r($content,true));
+
+                if (!array_key_exists('name', $content)) {
+                    continue;
+                }
+
+                $active_sieve_rules .= $content['name'].": ";
+                foreach ($content['actions'] as $action) {
+                    if ($action['type'] == 'include') {
+                        continue;
+                    }
+
+                    $active_sieve_rules .= $action['type'];
+
+                    if ($action['type'] == 'vacation') {
+                        $active_sieve_rules .= " '". $action['subject']. "'";
+                    } else if ($action['type'] == 'redirect') {
+                        $active_sieve_rules .= " '". $action['target']. "'";
+                    } else if ($action['type'] == 'notify') {
+                       $active_sieve_rules .= " '". $action['method']. "'";
+                    }
+
+                    $active_sieve_rules .= "; ";
+                }
+            }
+
+            $active_sieve_rules .= "<br/>";
+        }
+
+        $result[$user_dn]['sieve'] = $active_sieve_rules;
+
+        return $result;
+    }
+
     public function user_info($user, $attributes = array('*'))
     {
         $this->_log(LOG_DEBUG, "Auth::LDAP::user_info() for user " . var_export($user, true));
@@ -1155,6 +1232,12 @@ class LDAP extends Net_LDAP3 {
             return false;
         }
 
+        if (in_array('sieve', $attributes)) {
+            // we need to exclude mail forwarding and domain admins, they don't have a sieve filter
+            $attributes[]='objectclass';
+            $attributes[]='mailforwardingaddress';
+        }
+
         $this->read_prepare($attributes);
 
         $result = $this->_read($user_dn, $attributes);
@@ -1189,6 +1272,11 @@ class LDAP extends Net_LDAP3 {
             $result[$user_dn]['tbitskolabquotaused'] = $quota;
         }
 
+        // check for sieve rules that are active: vacation and forwarding
+        if (in_array('sieve', $attributes) && in_array('mailrecipient', $result[$user_dn]['objectclass']) && empty($result[$user_dn]['mailforwardingaddress'])) {
+             $result = $this->collect_sieve_rules($result);
+        }
+
         return $result;
 
     }
diff --git a/lib/api/kolab_api_service_user.php b/lib/api/kolab_api_service_user.php
index 7b230d8..dfdf02b 100644
--- a/lib/api/kolab_api_service_user.php
+++ b/lib/api/kolab_api_service_user.php
@@ -64,6 +64,10 @@ class kolab_api_service_user extends kolab_api_service
             $rights['find'] = "r";
         }
 
+        if (in_array('report', $effective_rights['entryLevelRights'])) {
+            $rights['report'] = "r";
+        }
+
         $rights['effective_rights'] = "r";
 
         return $rights;
diff --git a/lib/api/kolab_api_service_users.php b/lib/api/kolab_api_service_users.php
index 73f3890..e117b0f 100644
--- a/lib/api/kolab_api_service_users.php
+++ b/lib/api/kolab_api_service_users.php
@@ -35,12 +35,17 @@ class kolab_api_service_users extends kolab_api_service
             'sn',
             'givenname',
             'mail',
+            'alias',
             'objectclass',
             'uidnumber',
             'gidnumber',
             'mailhost',
             'mailquota',
             'entrydn',
+            'tbitskolablastlogin',
+            'tbitskolabquotaused',
+            'mailForwardingAddress',
+            'sieve',
         );
 
     /**
@@ -78,6 +83,15 @@ class kolab_api_service_users extends kolab_api_service
 
         Log::trace("users.list result: " . var_export($users, TRUE));
 
+        if (in_array('tbitskolabquotaused', $attributes) || in_array('sieve', $attributes)) {
+            // need to query user_info for each user
+            foreach ($users['list'] as $uid_dn => $data) {
+                $detaildata = $auth->user_info($uid_dn, array('uid', 'tbitskolabquotaused', 'mailhost', 'mail', 'sieve'));
+                $users['list'][$uid_dn]['tbitskolabquotaused'] = $detaildata[$uid_dn]['tbitskolabquotaused'];
+                $users['list'][$uid_dn]['sieve'] = $detaildata[$uid_dn]['sieve'];
+            }
+        }
+
         return $users;
     }
 
diff --git a/lib/client/kolab_client_task_user.php b/lib/client/kolab_client_task_user.php
index 0faf286..3a1d677 100644
--- a/lib/client/kolab_client_task_user.php
+++ b/lib/client/kolab_client_task_user.php
@@ -28,6 +28,7 @@ class kolab_client_task_user extends kolab_client_task
 
     protected $menu = array(
         'add'  => 'user.add',
+        'report' => 'user.report',
     );
 
     protected $list_attribs = array('displayname', 'cn');
@@ -76,6 +77,91 @@ class kolab_client_task_user extends kolab_client_task
         $this->output->set_object('taskcontent', $output);
     }
 
+    public function action_report()
+    {
+        // TODO: only show this to domain admins
+        $output = "<table><tr><th>#_#report.uid</th><th>#_#report.name</th><th>#_#report.email</th><th>#_#report.forward</th><th>#_#report.quotausage</th><th>#_#report.lastlogin</th></tr>\n";
+
+        // Get all users within the current domain, and their quota usage and last login data and some more information
+        $result = $this->api_post('users.list', null, 
+                    array('attributes' => array('uid', 'mail', 'alias', 'sieve', 'cn', 'mailForwardingAddress', 'tbitskolablastlogin', 'tbitskolabquotaused')));
+        $userdata = $result->get();
+
+        foreach ($userdata['list'] as $longuid => $user) {
+
+            $name = $user['cn'];
+            $uid = $user['uid'];
+
+            if (is_array($user['mail'])) {
+                $email = "";
+                foreach ($user['mail'] as $mail) {
+                    if (!empty($email)) {
+                        $email .= ",<br/>";
+                    }
+                    $email .= $mail;
+                }
+            } else {
+                $email = $user['mail'];
+            }
+
+            if (is_array($user['alias'])) {
+                foreach ($user['alias'] as $alias) {
+                    if (!empty($email)) {
+                        $email .= ",<br/>";
+                    }
+                    $email .= $alias;
+                }
+            } else if (!empty($user['alias'])) {
+                if (!empty($email)) {
+                    $email .= ",<br/>";
+                }
+                $email .= $user['alias'];
+            }
+
+            $sieve = $user['sieve'];
+
+            if (is_array($user['mailforwardingaddress'])) {
+                $forward = "";
+                foreach ($user['mailforwardingaddress'] as $fwd) {
+                    if (!empty($forward)) {
+                        $forward .= ",<br/>";
+                    }
+                    $forward .= $fwd;
+                }
+            } else {
+                $forward = $user['mailforwardingaddress'];
+            }
+
+            if (!empty($user['tbitskolablastlogin'])) {
+                $lastlogin = date('d.m.Y H:i:s', $user['tbitskolablastlogin']);
+            } else {
+                $lastlogin = "";
+            }
+
+            // see https://github.com/TBits/KolabScripts/blob/master/kolab/patches/quotaused_wap.patch
+            if (!empty($user['mailforwardingaddress'])) {
+                $output .= "<tr><td>$uid</td><td>$name</td><td>$email</td><td>Mail forwarding to:</td><td colspan='2'>$forward</td></tr>\n";
+            } else if (empty($user['mail'])) {
+                // TODO show limits for this domain admin
+                // TODO show domain admins at the top???
+                $output .= "<tr><td>$uid</td><td>$name</td><td>$email</td><td colspan='3'>Domain Admin</td></tr>\n";
+            } else {
+                $quota = kolab_html::inputquotaused(array('value' => $user['tbitskolabquotaused']));
+                $output .= "<tr><td>$uid</td><td>$name</td><td>$email</td><td>$sieve</td><td>$quota</td><td>$lastlogin</td></tr>\n";
+            }
+        }
+
+        $output .= "</table>\n";
+        $this->output->set_object('taskcontent', $output);
+        $this->output->add_translation('quota.unlimited');
+        $this->output->add_translation('report.uid');
+        $this->output->add_translation('report.name');
+        $this->output->add_translation('report.email');
+        $this->output->add_translation('report.forward');
+        $this->output->add_translation('report.quotausage');
+        $this->output->add_translation('report.lastlogin');
+    }
+
     private function user_form($attribs, $data = array())
     {
         if (empty($attribs['id'])) {
diff --git a/lib/locale/de_DE.php b/lib/locale/de_DE.php
index 785208e..b301a4f 100644
--- a/lib/locale/de_DE.php
+++ b/lib/locale/de_DE.php
@@ -434,6 +434,13 @@ $LANG['user.postalcode'] = 'Postleitzahl';
 $LANG['user.postbox'] = 'Postfach';
 $LANG['user.postcode'] = 'Postleitzahl';
 $LANG['user.preferredlanguage'] = 'Muttersprache';
+$LANG['user.report'] = 'Übersicht';
+$LANG['report.uid'] = "Benutzername";
+$LANG['report.name'] = "Name";
+$LANG['report.email'] = "E-Mail";
+$LANG['report.forward'] = "Weiterleitungen/Urlaub";
+$LANG['report.quotausage'] = "Speicherverbrauch";
+$LANG['report.lastlogin'] = "Letzter Login";
 $LANG['user.room'] = 'Raumnummer';
 $LANG['user.sn'] = 'Nachname';
 $LANG['user.street'] = 'Straße';
diff --git a/lib/locale/en_US.php b/lib/locale/en_US.php
index f02bdf8..a10564f 100644
--- a/lib/locale/en_US.php
+++ b/lib/locale/en_US.php
@@ -435,6 +435,13 @@ $LANG['user.postalcode'] = 'Postal Code';
 $LANG['user.postbox'] = 'Postal box';
 $LANG['user.postcode'] = 'Postal code';
 $LANG['user.preferredlanguage'] = 'Native tongue';
+$LANG['user.report'] = 'Report';
+$LANG['report.uid'] = "UID";
+$LANG['report.name'] = "Name";
+$LANG['report.email'] = "E-Mail";
+$LANG['report.forward'] = "Forwards/Vacation";
+$LANG['report.quotausage'] = "Quota Usage";
+$LANG['report.lastlogin'] = "Last Login";
 $LANG['user.room'] = 'Room number';
 $LANG['user.sn'] = 'Surname';
 $LANG['user.statistics'] = 'Info';
